<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-10-31T02:07:21+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Aitor | Ciberseguridad y Hacking Ético</title><subtitle>Artículos sobre ciberseguridad, CTF y desarrollo web</subtitle><author><name>Aitorgg02</name></author><entry><title type="html">Blind SSRF with out-of-band detection – PortSwigger Write Up</title><link href="http://localhost:4000/blind-ssrf-with-out-of-band-detection/" rel="alternate" type="text/html" title="Blind SSRF with out-of-band detection – PortSwigger Write Up" /><published>2022-10-30T00:00:00+02:00</published><updated>2022-10-30T00:00:00+02:00</updated><id>http://localhost:4000/blind-ssrf-with-out-of-band-detection</id><content type="html" xml:base="http://localhost:4000/blind-ssrf-with-out-of-band-detection/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “Blind SSRF with out-of-band detection.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/blind_ssrf_with_out_of_band_redirection/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a ver la web y vamos a ir a ver los detalles de un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/blind_ssrf_with_out_of_band_redirection/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interceptar&lt;/code&gt; la petición con el burpsuite de la función &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;view details&lt;/code&gt;. En este caso podemos ver una petición con bastantes cabeceras, pero vamos a fijarnos en una en específico que es la de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Referer&lt;/code&gt;, lo que implica que ésta es la que se
refiere cuando quiere referirse a una URL, es a donde se dirige.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/blind_ssrf_with_out_of_band_redirection/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso vamos a usar el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BurpCollaborator Client&lt;/code&gt; para que nos genere una URL a ver si cuando la copiamos y le damos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;poll now&lt;/code&gt; nos llega una petición HTTP.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/blind_ssrf_with_out_of_band_redirection/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Sí que nos envía una petición HTTP como es el caso y nos redirige a la URL que le habíamos especificado que era la ruta &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/test&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/blind_ssrf_with_out_of_band_redirection/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Laboratorio realizado.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/blind_ssrf_with_out_of_band_redirection/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="SSRF" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “Blind SSRF with out-of-band detection.</summary></entry><entry><title type="html">SSRF with blacklist-based input filter – PortSwigger Write Up</title><link href="http://localhost:4000/ssrf-with-blacklist-based-input-filter/" rel="alternate" type="text/html" title="SSRF with blacklist-based input filter – PortSwigger Write Up" /><published>2022-10-30T00:00:00+02:00</published><updated>2022-10-30T00:00:00+02:00</updated><id>http://localhost:4000/ssrf-with-blacklist-based-input-filter</id><content type="html" xml:base="http://localhost:4000/ssrf-with-blacklist-based-input-filter/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “SSRF with blacklist-based input filter.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;Este laboratorio tiene una función de verificación de existencias que obtiene datos de un sistema interno.&lt;/p&gt;

&lt;p&gt;Para resolver el laboratorio, cambie la URL de verificación de existencias para acceder a la interfaz de administración http://localhost/adminy elimine el usuario carlos.&lt;/p&gt;

&lt;p&gt;El desarrollador ha desplegado dos débiles defensas anti-SSRF que deberá eludir.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a ver la web y vamos a ir a ver los detalles de un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interceptar&lt;/code&gt; la petición con el burpsuite.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez recibida la petición vamos a enviarla al &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repeater&lt;/code&gt; y a darle a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;send&lt;/code&gt; a ver que nos devuelve&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso vamos a recodear la url con Ctrl U y a ver si nos devuelve algo, dandole a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;send&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Nos falta hacer lo mismo en el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt; hay que recodearlo con Ctrl U.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/9.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;No ha sido exitoso recodeandolo asi que en este caso vamos a usar &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost&lt;/code&gt; a ver si podemos acceder.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/10.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;El anterior caso no ha sido exitoso, como sabemos &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost&lt;/code&gt; se puede representar de esta otra manera &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt;, vamos a probar de esa manera:&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/11.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Como por detrás quizás esté validando en el servidor que la palabra &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt; no le deje entrar, vamos a codear la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; de admin para que poder bypassear la sanetización. Y aparte vamos a usar el 127.1 ya que en este caso si los siguientes números son 0, se puede
simplificar la dirección IP de esta manera: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.1&lt;/code&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/12.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/13.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Y efectivamente de esta manera nos ha dejado acceder al panel de admin, en este caso hay que eliminar al usuario Carlos, así que vamos a eliminarlo y de esta forma completamos el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/14.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/15.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Laboratorio realizado.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_blacklist_based_input_filter/16.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="SSRF" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “SSRF with blacklist-based input filter.</summary></entry><entry><title type="html">SSRF with filter bypass via open redirection vulnerability – PortSwigger Write Up</title><link href="http://localhost:4000/ssrf-with-filter-bypass-via-open-redirection-vulnerability/" rel="alternate" type="text/html" title="SSRF with filter bypass via open redirection vulnerability – PortSwigger Write Up" /><published>2022-10-30T00:00:00+02:00</published><updated>2022-10-30T00:00:00+02:00</updated><id>http://localhost:4000/ssrf-with-filter-bypass-via-open-redirection-vulnerability</id><content type="html" xml:base="http://localhost:4000/ssrf-with-filter-bypass-via-open-redirection-vulnerability/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “SSRF with filter bypass via open redirection vulnerability.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a ver la web y vamos a ir a ver los detalles de un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interceptar&lt;/code&gt; la petición con el burpsuite.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En la URL de la petición vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decodearla&lt;/code&gt;, a con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl U&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso vamos a volver a la web, donde podemos ver que hay un botón para ver el siguiente producto, con el burpsuite activado vamos interceptar la petición.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a copiar la URL de la petición para ver en la URL de la web también se puede hacer&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Si podemos ver en la URL en el path si nos hace un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;redirect&lt;/code&gt; es que es vulnerable, en este caso le ponemos la ruta de google y si nos redirecciona.
Ya tenemos una potencial vulnerabilidad, vamos a volver al burpsuite para completar el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/9.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Volvemos a capturar la petición del &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;next product&lt;/code&gt; y vamos a usar una IP de la red interna como nos dice en la descripción del laboratorio y escribirla después del path para que nos haga un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;redirect&lt;/code&gt;. Bingo, hemos accedido al panel, ya solo nos falta eliminar 
el usuario &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Carlos&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/10.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/11.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Laboratorio realizado.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_filter_bypass_via_open_redirection_vulnerability/12.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="SSRF" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “SSRF with filter bypass via open redirection vulnerability.</summary></entry><entry><title type="html">SSRF with whitelist-based input filter – PortSwigger Write Up</title><link href="http://localhost:4000/ssrf-with-whitelist-based-input-filter/" rel="alternate" type="text/html" title="SSRF with whitelist-based input filter – PortSwigger Write Up" /><published>2022-10-30T00:00:00+02:00</published><updated>2022-10-30T00:00:00+02:00</updated><id>http://localhost:4000/ssrf-with-whitelist-based-input-filter</id><content type="html" xml:base="http://localhost:4000/ssrf-with-whitelist-based-input-filter/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “SSRF with whitelist-based input filter.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ver los detalles&lt;/code&gt; de los productos e interceptar la petición con el burpsuite.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Con la petición vamos a coger la URL y decodearla con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl U&lt;/code&gt;. Una vez decodeado hay que codear también el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a enviar la petición al &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repeater&lt;/code&gt; con Ctrl R y ver si poniendo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost/admin&lt;/code&gt; nos devuelve un panel de admin. En este caso cuando enviamos la petición nos dice que &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stock.weliketoshop.com&lt;/code&gt; tiene que estar también en la URL.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a poner en la url la dirección que nos pide obligatoriamente y con el nombre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt;, en este caso no nos da ningún error así que hay que ver sobre esta URL como podemos implementar el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente vamos a ver si introduciendo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost&lt;/code&gt; y seguidamente el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; para acceder al propio localhost y accediendo a una sección de la página que en este caso sería &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stock.weliketoshop.com&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a recodear el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#&lt;/code&gt; por si en este caso está saneando por el lado del servidor. Cómo podemos ver nos da una respuesta &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;200 OK&lt;/code&gt;, hemos podido acceder al panel de admin, ahora vamos a eliminar al usuario Carlos y ya estaría completado el laboratorio&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/9.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/10.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/11.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Laboratorio realizado.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/ssrf_with_whitelist_based_input_filter/12.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="SSRF" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “SSRF with whitelist-based input filter.</summary></entry><entry><title type="html">Basic SSRF against the local server – PortSwigger Write Up</title><link href="http://localhost:4000/basic-ssrf-against-another-backend-system/" rel="alternate" type="text/html" title="Basic SSRF against the local server – PortSwigger Write Up" /><published>2022-10-21T00:00:00+02:00</published><updated>2022-10-21T00:00:00+02:00</updated><id>http://localhost:4000/basic-ssrf-against-another-backend-system</id><content type="html" xml:base="http://localhost:4000/basic-ssrf-against-another-backend-system/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “Basic SSRF against the local server.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;En este ejemplo, hay un dispositivo en la red interna que permite el acceso no autenticado a la interfaz de administración. Dado que no podemos acceder a este dispositivo externamente, 
necesitaremos aprovechar la vulnerabilidad SSRF en el servidor web externo para comunicarnos con él. Para empezar, sabemos que la red interna utiliza el siguiente esquema de red interna: 192.168.0.0/24.&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a ver la web y vamos a ir a ver los detalles de un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interceptar&lt;/code&gt; la petición con el burpsuite.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Interceptemos la solicitud HTTP y enviémosla al &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Repeater&lt;/code&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a pulsar Ctrl Shift U para recodearlo.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Cómo sabemos la URL a la que tenemos que acceder vamos a poner directamente la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;URL&lt;/code&gt;, como no sabemos la dirección ip de la red interna vamos a hacer un ataque de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fuzzing&lt;/code&gt; a la IP.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso vamos a irnos al &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Intruder&lt;/code&gt; con Ctrl I y vamos a coger el último dígito de la dirección IP ya que como hemos visto en la descripción del laboratorio el rango de la IP sabemos que es desde el 192.168.0.X hasta el 192.168.0.254, en este caso vamos a hacer
un ataque de fuerza bruta. Vamos a añadirle un payload al ñultimo dñigito de la IP para fuzzearla.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Como vemos en la sección del payload vamos a seleccionar un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;único payload de tipo number&lt;/code&gt; y que sea secuencia de 1 en 1 desde el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rango 1 hasta el 254&lt;/code&gt; y comenzamos el ataque.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/9.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente damos con el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;206&lt;/code&gt; que nos da un &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;200&lt;/code&gt; por parte del servidor así que es funcional.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/10.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Finalmente vamos a copiar la IP entera valida que en este caso es la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.0.206&lt;/code&gt;, nos vamos al Repeater y enviamos la petición y como vemos si renderizamos la petición nos aparece el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;panel de admin&lt;/code&gt; el cual no teniamos acceso desde la máquina.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/11.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos al código y vemos que hay una &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruta para eliminar al usuario Carlos&lt;/code&gt; así que la copiamos y enviamos la petición y de esta forma finalmente completamos el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/12.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_another_backend_system/13.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="SSRF" /><category term="Apprentice" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “Basic SSRF against the local server.</summary></entry><entry><title type="html">Basic SSRF against the local server – PortSwigger Write Up</title><link href="http://localhost:4000/basic-ssrf-against-the-local-server/" rel="alternate" type="text/html" title="Basic SSRF against the local server – PortSwigger Write Up" /><published>2022-10-21T00:00:00+02:00</published><updated>2022-10-21T00:00:00+02:00</updated><id>http://localhost:4000/basic-ssrf-against-the-local-server</id><content type="html" xml:base="http://localhost:4000/basic-ssrf-against-the-local-server/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “Basic SSRF against the local server.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;Este laboratorio tiene una función de verificación de existencias que obtiene datos de un sistema interno.&lt;/p&gt;

&lt;p&gt;Para resolver el laboratorio, cambie la URL de verificación de existencias para acceder a la interfaz de administración http://localhost/adminy elimine el usuario carlos.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a ver la web y vamos a ir a ver los detalles de un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez dentro vamos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;interceptar&lt;/code&gt; la petición con el burpsuite.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Interceptemos la solicitud HTTP y enviémosla al repetidor.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a pulsar Ctrl Shift U para recodearlo.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ahora como nos dice en la descripción del laboratorio que probemos entrar al &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost/admin&lt;/code&gt; de la máquina vamos a ver si nos da acceso cuando le demos a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;send&lt;/code&gt;.
La respuesta en este caso podemos darle a la vista de &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render&lt;/code&gt; para visualizar el contenido como se vería la respuesta y nos sale el panel de admin el cual antes no nos aparecía.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Una vez accedidos al panel de admin, vamos a copiar la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ruta de el usuario Carlos&lt;/code&gt; para eliminarlo y así completar el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/9.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/10.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Laboratorio realizado&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/11.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/basic_ssrf_against_the_local_server/12.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="SSRF" /><category term="Apprentice" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “Basic SSRF against the local server.</summary></entry><entry><title type="html">File path traversal, sequences blocked with absolute path bypass – PortSwigger Write Up</title><link href="http://localhost:4000/file-path-traversal-sequences-blocked-with-absolute-path-bypass/" rel="alternate" type="text/html" title="File path traversal, sequences blocked with absolute path bypass – PortSwigger Write Up" /><published>2022-10-18T00:00:00+02:00</published><updated>2022-10-18T00:00:00+02:00</updated><id>http://localhost:4000/file-path-traversal-sequences-blocked-with-absolute-path-bypass</id><content type="html" xml:base="http://localhost:4000/file-path-traversal-sequences-blocked-with-absolute-path-bypass/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, sequences blocked with absolute path bypass.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;Cómo nos dice en la descripción del producto tenemos que acceder al directorio /etc/passwd mediante la ruta de las imágenes&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_blocked_with_absolute_path_bypass/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En la web que nos aparece es una tienda donde podemos ver los productos, así que vamos a ver un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_blocked_with_absolute_path_bypass/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a darle a abrir &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imagen en una pestaña nueva&lt;/code&gt; para poder ver la ruta de la imagen y a partir de dicha ruta poder acceder a la ruta vulnerable.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_blocked_with_absolute_path_bypass/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a interceptar la petición con el burpsuite y la vamos a llevar al Repeater con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+R&lt;/code&gt;, vamos a ver si retrocediendo los directorios con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;../&lt;/code&gt; múltiples veces llegamos a ver el directorio. Y en la respuesta nos da la solución hemos podido acceder
a dicha ruta.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_blocked_with_absolute_path_bypass/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso si tiramos de una ruta absoluta nos coge el fichero sin tener que retroceder con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;../&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_blocked_with_absolute_path_bypass/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Con esto concluimos el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_blocked_with_absolute_path_bypass/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="Directory traversal" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, sequences blocked with absolute path bypass.</summary></entry><entry><title type="html">File path traversal, traversal sequences stripped non-recursively – PortSwigger Write Up</title><link href="http://localhost:4000/file-path-traversal-sequences-stripped-non-recursively/" rel="alternate" type="text/html" title="File path traversal, traversal sequences stripped non-recursively – PortSwigger Write Up" /><published>2022-10-18T00:00:00+02:00</published><updated>2022-10-18T00:00:00+02:00</updated><id>http://localhost:4000/file-path-traversal-sequences-stripped-non-recursively</id><content type="html" xml:base="http://localhost:4000/file-path-traversal-sequences-stripped-non-recursively/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, traversal sequences stripped non-recursively.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;Cómo nos dice en la descripción del producto tenemos que acceder al directorio /etc/passwd mediante la ruta de las imágenes&lt;/p&gt;

&lt;p&gt;Otro consejo que nos da es que en este caso la aplicaciñon sanea por parte del servidor todo contenido que tenga que ver con directorios.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_non_recuersively/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En la web que nos aparece es una tienda donde podemos ver los productos, así que vamos a ver un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_non_recuersively/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a darle a abrir &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imagen en una pestaña nueva&lt;/code&gt; para poder ver la ruta de la imagen y a partir de dicha ruta poder acceder a la ruta vulnerable.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_non_recuersively/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a interceptar la petición con el burpsuite y la vamos a llevar al Repeater con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+R&lt;/code&gt;, vamos a ver si retrocediendo los directorios con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;....//&lt;/code&gt; múltiples veces llegamos a ver el directorio. Y en la respuesta nos da la solución hemos podido acceder
a dicha ruta.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;En este caso como por parte del servidor sanea los datos introducidos si sanea ../, si ponemos el doble realmente sanea los datos de entrada 1 vez, así que de esa forma &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no es recursivo&lt;/code&gt; el saneamiento que aplica y conseguimos acceder al directorio.&lt;/li&gt;
&lt;/ul&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_non_recuersively/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_non_recuersively/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Con esto concluimos el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_non_recuersively/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="Directory traversal" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, traversal sequences stripped non-recursively.</summary></entry><entry><title type="html">File path traversal, traversal sequences stripped with superfluous URL-decode – PortSwigger Write Up</title><link href="http://localhost:4000/file-path-traversal-sequences-stripped-with-superfluous-url/" rel="alternate" type="text/html" title="File path traversal, traversal sequences stripped with superfluous URL-decode – PortSwigger Write Up" /><published>2022-10-18T00:00:00+02:00</published><updated>2022-10-18T00:00:00+02:00</updated><id>http://localhost:4000/file-path-traversal-sequences-stripped-with-superfluous-url</id><content type="html" xml:base="http://localhost:4000/file-path-traversal-sequences-stripped-with-superfluous-url/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, traversal sequences stripped with superfluous URL-decode.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;Cómo nos dice en la descripción del producto tenemos que acceder al directorio /etc/passwd mediante la ruta de las imágenes&lt;/p&gt;

&lt;p&gt;Otro consejo que nos da es que en este caso la aplicaciñon sanea por parte del servidor todo contenido que tenga que ver con directorios.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En la web que nos aparece es una tienda donde podemos ver los productos, así que vamos a ver un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a darle a abrir &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imagen en una pestaña nueva&lt;/code&gt; para poder ver la ruta de la imagen y a partir de dicha ruta poder acceder a la ruta vulnerable.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a interceptar la petición con el burpsuite y la vamos a llevar al Repeater con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+R&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso como intentando los métodos anteriores vamos a codear la barra &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; para ver si así no lo sanea por parte del servidor.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Ahora la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; codeada es &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%2f&lt;/code&gt; y si le enviamos la respuesta nos dice que no existe el fichero.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En este caso vamos a volver a codear la &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; que nos devuelve codeado &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%25&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a copiar y pegar ese mismo directorio para ir hacia atrás hasta el &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etc/passwd&lt;/code&gt;.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/9.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Con esto concluimos el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_sequences_stripped_with_superflous_url_decode/10.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="Directory traversal" /><category term="Practitioner" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, traversal sequences stripped with superfluous URL-decode.</summary></entry><entry><title type="html">File path traversal, simple case – PortSwigger Write Up</title><link href="http://localhost:4000/file-path-traversal-simple-case/" rel="alternate" type="text/html" title="File path traversal, simple case – PortSwigger Write Up" /><published>2022-10-18T00:00:00+02:00</published><updated>2022-10-18T00:00:00+02:00</updated><id>http://localhost:4000/file-path-traversal-simple-case</id><content type="html" xml:base="http://localhost:4000/file-path-traversal-simple-case/">&lt;p&gt;En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, simple case.”&lt;/p&gt;

&lt;h2 id=&quot;pasos&quot;&gt;Pasos&lt;/h2&gt;

&lt;p&gt;Cómo nos dice en la descripción del producto tenemos que acceder al directorio /etc/passwd mediante la ruta de las imágenes&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/1.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;En la web que nos aparece es una tienda donde podemos ver los productos, así que vamos a ver un producto.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/2.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a darle a abrir &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;imagen en una pestaña nueva&lt;/code&gt; para poder ver la ruta de la imagen y a partir de dicha ruta poder acceder a la ruta vulnerable.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/3.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/4.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/5.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Vamos a interceptar la petición con el burpsuite y la vamos a llevar al Repeater con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ctrl+R&lt;/code&gt;, vamos a ver si retrocediendo los directorios con &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;../&lt;/code&gt; múltiples veces llegamos a ver el directorio. Y en la respuesta nos da la solución hemos podido acceder 
a dicha ruta.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/6.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Con esto concluimos el laboratorio.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/7.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
     &lt;img src=&quot;/assets/images/portswigger/file_path_traversal_simple_case/8.png&quot; width=&quot;1000&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;¡Un saludo y espero que os sirva de apoyo!&lt;/p&gt;</content><author><name>Aitorgg02</name></author><category term="Directory traversal" /><category term="Apprentice" /><summary type="html">En este post vamos a estar resolviendo el laboratorio de PortSwigger: “File path traversal, simple case.</summary></entry></feed>